#include <stdio.h>
#include <stdlib.h>
#include <math.h>   // For abs()

int tph, philname[20], status[20], howhung, hu[20], cho;
int pos = 0;  // Used in 'two' function

void one();
void two();

int main() {
    int i;
    printf("\n\nDINING PHILOSOPHER PROBLEM\n");
    printf("Enter the total no. of philosophers: ");
    scanf("%d", &tph);

    for (i = 0; i < tph; i++) {
        philname[i] = i + 1;
        status[i] = 1; // 1 = thinking, 2 = hungry
    }

    printf("How many are hungry: ");
    scanf("%d", &howhung);

    if (howhung == tph) {
        printf("\nAll are hungry..\nDeadlock stage will occur!");
        printf("\nExiting..\n");
        exit(0);
    } else {
        for (i = 0; i < howhung; i++) {
            printf("Enter philosopher %d position (0 to %d): ", i + 1, tph - 1);
            scanf("%d", &hu[i]);
            status[hu[i]] = 2; // Mark hungry
        }

        do {
            printf("\n\n1. One can eat at a time\n2. Two can eat at a time\n3. Exit\nEnter your choice: ");
            scanf("%d", &cho);
            switch (cho) {
                case 1: one(); break;
                case 2: two(); break;
                case 3: exit(0);
                default: printf("Invalid option..\n");
            }
        } while (1);
    }

    return 0;
}

// Allow one philosopher to eat
void one() {
    printf("\n--- Allowing one philosopher to eat at a time ---\n");
    for (int i = 0; i < howhung; i++) {
        printf("Philosopher %d is eating\n", philname[hu[i]]);
        for (int j = 0; j < howhung; j++) {
            if (i != j) {
                printf("Philosopher %d is waiting\n", philname[hu[j]]);
            }
        }
        printf("Philosopher %d finished eating\n\n", philname[hu[i]]);
    }
}

// Allow two philosophers to eat if they're not adjacent
void two() {
    int i, j, s = 0, t, r, x;
    printf("\n--- Allowing two philosophers to eat at same time ---\n");
    for (i = 0; i < howhung; i++) {
        for (j = i + 1; j < howhung; j++) {
            // Check if they are not adjacent (and not circular neighbors)
            if (abs(hu[i] - hu[j]) != 1 && abs(hu[i] - hu[j]) != (tph - 1)) {
                printf("\nCombination %d:\n", ++s);
                t = hu[i];
                r = hu[j];
                printf("Philosopher %d and Philosopher %d are eating\n", philname[t], philname[r]);
                for (x = 0; x < howhung; x++) {
                    if (hu[x] != t && hu[x] != r) {
                        printf("Philosopher %d is waiting\n", philname[hu[x]]);
                    }
                }
            }
        }
    }
    if (s == 0) {
        printf("No valid pair of philosophers can eat without causing deadlock.\n");
    }
}
